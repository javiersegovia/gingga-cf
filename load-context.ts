import { drizzle } from 'drizzle-orm/postgres-js'
// import type { PlatformProxy } from 'wrangler'
import * as schema from '@/db/schema'
import { Context } from 'hono'
import type { SecureHeadersVariables } from 'hono/secure-headers'

/* type your Hono variables (used with c.get/c.set) here */
type Variables = SecureHeadersVariables & {
  db: ReturnType<typeof drizzle<typeof schema>>
}

/* The "Env" is generated by Cloudflare Wrangler and is typed inside worder-configuration.d.ts */
export type ContextEnv = {
  Bindings: Required<Env> & { NODE_ENV: string }
  Variables: Variables
}

export function getLoadContext(c: Context<ContextEnv>) {
  const cloudflare = {
    nonce: c.get('secureHeadersNonce'),
    env: {
      ...c.env,
      NODE_ENV: process.env.NODE_ENV,
    },
  }

  return {
    cloudflare,
  }
}

declare module '@remix-run/cloudflare' {
  interface AppLoadContext extends ReturnType<typeof getLoadContext> {
    db: ReturnType<typeof drizzle<typeof schema>>
  }
}
